<!DOCTYPE html>
<html>

<head>
    <link rel="stylesheet" href="~/css/articles.css"/>
</head>

@{
    ViewData["Title"] = "Статьи";
}

<div>
    <h1>Тэг-хелперы</h1>
    <div>
        <p></p><h3>Что такое Tag Helpers?</h3>
        <p>
            Tag Helpers заставляют код со стороны сервера участвовать в создании и представлении HTML элементов в Razor файлах. 
            Например, встроенный ImageTagHelper может присоединить номер версии к имени изображения. Когда изображение меняется, 
            сервер генерирует новую уникальную версию изображения, так что клиент гарантированно получит текущую версию изображения 
            (вместо кэшированного изображения). Для общих целей существует много встроенных Tag Helpers - например, для создания 
            форм, ссылок, загрузки и тд - и многие из них доступны в открытых GitHub репозиториях и в качестве NuGet пакетов. 
            Tag Helpers работают с HTML элементами, основываясь на имени элемента, имени атрибута или родительском тэге. Например, 
            встроенный LabelTagHelper может работать с HTML элементом "label", если применяются атрибуты LabelTagHelper.
        </p><p></p>
        <h3>Чем полезны Tag Helpers?</h3>
        <p>
            <b>Большая схожесть с HTML</b>
            <p>
                По большей части разметка Razor, где используются Tag Helpers, выглядит, как стандартный HTML. Фронтэнд разработчики, 
                работающие с HTML/CSS/JavaScript, могут редактировать Razor без необходимости изучать синтаксис C# Razor.
            </p>
            <b>Поддержка IntelliSense при создании HTML и Razor разметки</b>
            <p>
                В этом Tag Helpers сильно отличаются от вспомогательных методов HTML. В разделе Tag Helpers по сравнению со 
                вспомогательными методами HTML более подробно объясняется эта разница. Кроме того, вам стоит уделить особое внимание 
                разделу Поддержка IntelliSense для Tag Helpers. Даже разработчики, сведущие в синтаксисе Razor C#, работают более 
                продуктивно, используя Tag Helpers, нежели создавая C# Razor разметку.
            </p>
            <b>Вы сможете работать более продуктивно и создавать более надежный, устойчивый и безопасный код, используя информацию, 
                которая доступна только на сервере</b>
            <p>
                Например, когда ранее мы хотели изменить изображение, нам нужно было изменить название изображения. Изображения нужно 
                было обязательно кэшировать по причинам эффективности, и пока мы не меняли имя изображения, клиенты могли получать его 
                копию. Исторически после редактирования изображения нужно было обязательно менять его имя и каждую ссылку на него в веб 
                приложении. Мало того, что это трудоемкий процесс, так еще у вас могут возникнуть и ошибки (вы можете пропустить ссылку, 
                случайно ввести неправильную строку и тд.) Встроенный ImageTagHelper может сделать это автоматически. ImageTagHelper 
                присоединяет номер версии к имени изображения, так что когда изображение меняется, сервер автоматически генерирует новую 
                уникальную версию изображения. Клиенты гарантированно получают текущее изображение. Все это достигается с помощью 
                ImageTagHelper.
        </p><p></p>
</div>
</div>

<div>
    <li><a href="http://dotnet.today/ru/aspnet5-vnext/mvc/views/tag-helpers/intro.html">Введение в Тэг-хелперы</a></li>
</div>